global
  daemon
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  maxconn 20000
  tune.ssl.default-dh-param 2048
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

defaults
  log               global
  retries           3
  maxconn           20000
  mode              http
  option            httplog
  option            dontlognull
  option            redispatch
  timeout connect   5000ms
  timeout client    50000ms
  timeout server    50000ms

listen stats
  bind *:9999
  mode http
  stats enable
  stats uri /

{{ if .Apps.HasVHosts }}
frontend http-in
  bind *:80
  mode http
{{ range $index, $app := .Apps }}
{{ range $sindex, $servicePort := $app.ServicePorts }}
{{ $haproxyEnv := (index $app.HaproxyEnvs $sindex) }}
{{ if (ne $haproxyEnv.VHost "") }}
  acl http_{{ $app.EscapedId }}_{{ $servicePort }}_acl hdr(host) -i {{ $haproxyEnv.VHost }}
{{ if $haproxyEnv.RedirectToHTTPS }} redirect scheme https if http_{{ $app.EscapedId }}_{{ $servicePort }}_acl !{ ssl_fc } {{ end }}
  use_backend {{ $app.EscapedId }}_{{ $servicePort }}_backend if http_{{ $app.EscapedId }}_{{ $servicePort }}_acl
{{ end }}
{{ end }}
{{ end }}
{{ if .Apps.GetSSLCertFiles }}
frontend https-in
  bind *:443 ssl {{ range $index, $certFile := .Apps.GetSSLCertFiles }} crt {{ $certFile }} {{ end }}
  mode http
{{ range $index, $app := .Apps }}
{{ range $sindex, $servicePort := $app.ServicePorts }}
{{ $haproxyEnv := (index $app.HaproxyEnvs $sindex) }}
{{ if ne $haproxyEnv.VHost ""}}
  acl https_{{ $app.EscapedId }}_{{ $servicePort }}_acl hdr(host) -i {{ $haproxyEnv.VHost }}
{{ if (eq $haproxyEnv.SSLCertFile "") }} redirect scheme http if https_{{ $app.EscapedId }}_{{ $servicePort }}_acl { ssl_fc } {{ end }}
  use_backend {{ $app.EscapedId }}_{{ $servicePort }}_backend if https_{{ $app.EscapedId }}_{{ $servicePort }}_acl
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ range $index, $app := .Apps }}
{{ range $sindex, $servicePort := $app.ServicePorts }}
{{ $haproxyEnv := (index $app.HaproxyEnvs $sindex) }}
frontend {{ $app.EscapedId }}_{{ $servicePort }}_frontend
  bind *:{{ $servicePort }} {{if $haproxyEnv.SSLCertFile }}ssl crt {{ $haproxyEnv.SSLCertFile }} {{ end }}
  mode {{ $haproxyEnv.Mode }}
  option {{ $haproxyEnv.Mode }}log
{{ if $haproxyEnv.RedirectToHTTPS }} redirect scheme https if !{ ssl_fc }{{ end }}
  use_backend {{ $app.EscapedId }}_{{ $servicePort }}_backend

backend {{ $app.EscapedId }}_{{ $servicePort }}_backend
  mode {{ $haproxyEnv.Mode }}
  balance {{ $haproxyEnv.Balance }}
  option {{ $haproxyEnv.Mode }}log{{ if eq $haproxyEnv.Mode "http" }}
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }{{ end }}{{ if $haproxyEnv.Sticky }}
  cookie dkos_server_id insert indirect nocache {{ end }}
{{ range $page, $task := $app.Tasks }}
  server {{ $app.EscapedId}}-{{ $task.Host }}-{{ index $task.Ports $sindex }} {{ $task.Host }}:{{ index $task.Ports $sindex }} check {{ if $haproxyEnv.Sticky }}cookie {{ $app.EscapedId}}-{{ $task.Host }}-{{ index $task.Ports $sindex }}{{ end }} {{ end }}
{{ end }}{{ end }}
